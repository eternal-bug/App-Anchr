[% INCLUDE header.tt2 %]
log_warn 0_master.sh

#----------------------------#
# preprocessing
#----------------------------#
if [ -e 2_fastqc.sh ]; then
    bash 2_fastqc.sh;
fi
if [ -e 2_kmergenie.sh ]; then
    bash 2_kmergenie.sh;
fi
if [ -e 2_trim.sh ]; then
    bash 2_trim.sh;
fi
if [ -e 3_trimlong.sh ]; then
    bash 3_trimlong.sh;
fi
if [ -e 9_statReads.sh ]; then
    bash 9_statReads.sh;
fi

if [ -e 2_insertSize.sh ]; then
    bash 2_insertSize.sh;
fi

#----------------------------#
# mergereads
#----------------------------#
if [ -e 2_mergereads.sh ]; then
    bash 2_mergereads.sh;
fi

#----------------------------#
# quorum
#----------------------------#
if [ -e 2_quorum.sh ]; then
    bash 2_quorum.sh;
fi
if [ -e 9_statQuorum.sh ]; then
    bash 9_statQuorum.sh;
fi

#----------------------------#
# down sampling, k-unitigs and anchors
#----------------------------#
if [ -e 4_downSampling.sh ]; then
    bash 4_downSampling.sh;
fi

if [ -e 4_kunitigs.sh ]; then
    bash 4_kunitigs.sh;
fi
if [ -e 4_anchors.sh ]; then
    bash 4_anchors.sh;
fi
[% IF opt.tadpole -%]
if [ -e 9_statAnchors.sh ]; then
    bash 9_statAnchors.sh 4_kunitigs statKunitigsAnchors.md
fi

if [ -e 4_kunitigs.sh ]; then
    bash 4_tadpole.sh
fi
if [ -e 4_anchors.sh ]; then
    bash 4_tadpoleAnchors.sh
fi
if [ -e 9_statAnchors.sh ]; then
    bash 9_statAnchors.sh 4_tadpole statTadpoleAnchors.md
fi

[% ELSE -%]
if [ -e 9_statAnchors.sh ]; then
    bash 9_statAnchors.sh;
fi
[% END -%]

#----------------------------#
# merge anchors
#----------------------------#
[% IF opt.tadpole -%]
if [ -e 6_mergeAnchors.sh ]; then
    bash 6_mergeAnchors.sh 4_kunitigs 6_mergeKunitigsAnchors;

    bash 6_mergeAnchors.sh 4_tadpole 6_mergeTadpoleAnchors;

    bash 6_mergeAnchors.sh 6_merge 6_mergeAnchors;
fi
[% ELSE -%]
if [ -e 6_mergeAnchors.sh ]; then
    bash 6_mergeAnchors.sh 4_kunitigs_Q;
fi
[% END -%]

# anchor sort on ref
if [ -e 1_genome/genome.fa ]; then
    for D in 6_mergeAnchors 6_mergeKunitigsAnchors 6_mergeTadpoleAnchors; do
        if [ ! -d ${D} ]; then
            continue;
        fi

        bash ~/Scripts/cpan/App-Anchr/share/sort_on_ref.sh \
            ${D}/anchor.merge.fasta 1_genome/genome.fa ${D}/anchor.sort
        nucmer -l 200 1_genome/genome.fa ${D}/anchor.sort.fa
        mummerplot --postscript out.delta -p anchor.sort --small

        # mummerplot files
        rm *.[fr]plot
        rm out.delta
        rm *.gp
        mv anchor.sort.ps ${D}/

        # minidot
        minimap ${D}/anchor.sort.fa 1_genome/genome.fa \
            | minidot - > ${D}/anchor.minidot.eps
    done
fi

#----------------------------#
# canu
#----------------------------#
if [ -e 5_canu.sh ]; then
    bash 5_canu.sh;
fi
if [ -e 9_statCanu.sh ]; then
    bash 9_statCanu.sh;
fi

#----------------------------#
# expand anchors
#----------------------------#
if [ -e 6_anchorLong.sh ]; then
    bash 6_anchorLong.sh 6_mergeAnchors/anchor.merge.fasta 5_canu_Xall-trim/[% opt.basename %].correctedReads.fasta.gz;
fi
if [ -e 6_anchorFill.sh ]; then
    bash 6_anchorFill.sh 6_anchorLong/contig.fasta 5_canu_Xall-trim/[% opt.basename %].contigs.fasta
fi

#----------------------------#
# spades and platanus
#----------------------------#
if [ -e 8_spades.sh ]; then
    bash 8_spades.sh;
fi
if [ -e 8_platanus.sh ]; then
    bash 8_platanus.sh;
fi

#----------------------------#
# final stats
#----------------------------#
if [ -e 9_statFinal.sh ]; then
    bash 9_statFinal.sh;
fi
if [ -e 9_quast.sh ]; then
    bash 9_quast.sh;
fi

