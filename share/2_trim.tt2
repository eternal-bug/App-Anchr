[% INCLUDE header.tt2 %]
log_warn 2_trim.sh

cd 2_illumina

anchr trim \
    [% opt.trim2 %] \
[% IF opt.sample2 -%]
[% IF opt.genome -%]
    --sample $(( [% opt.genome %] * [% opt.sample2 %] )) \
[% END -%]
[% END -%]
    $(
        if [ -e illumina_adapters.fa ]; then
            echo "-a illumina_adapters.fa";
        fi
    ) \
    --nosickle \
    --parallel [% opt.parallel %] \
    R1.fq.gz [% IF not opt.se %]R2.fq.gz[% END %] \
    -o trim.sh
bash trim.sh

parallel --no-run-if-empty --linebuffer -k -j 2 "
    mkdir -p Q{1}L{2}
    cd Q{1}L{2}

    printf '==> Qual-Len: %s\n'  Q{1}L{2}
    if [ -e R1.sickle.fq.gz ]; then
        echo '    R1.sickle.fq.gz already presents'
        exit;
    fi

    anchr trim \
        -q {1} -l {2} \
        \$(
            if [ -e ../R1.bbduk.fq.gz ]; then
                echo '../R1.bbduk.fq.gz [% IF not opt.se %]../R2.bbduk.fq.gz[% END %]'
            elif [ -e ../R1.sample.fq.gz ]; then
                echo '../R1.sample.fq.gz [% IF not opt.se %]../R2.sample.fq.gz[% END %]'
            elif [ -e ../R1.shuffle.fq.gz ]; then
                echo '../R1.shuffle.fq.gz [% IF not opt.se %]../R2.shuffle.fq.gz[% END %]'
            elif [ -e ../R1.uniq.fq.gz ]; then
                echo '../R1.uniq.fq.gz [% IF not opt.se %]../R2.uniq.fq.gz[% END %]'
            else
                echo '../R1.fq.gz [% IF not opt.se %]../R2.fq.gz[% END %]'
            fi
        ) \
        --parallel [% opt.parallel %] \
        -o stdout \
        | bash
    " ::: [% opt.qual2 %] ::: [% opt.len2 %]
