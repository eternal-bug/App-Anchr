[% INCLUDE header.tt2 %]

USAGE="Usage: $0 DIR_PREFIX"

if [ "$#" -lt 1 ]; then
	echo >&2 "$USAGE"
	exit 1
fi

# set default parameters
DIR_PREFIX=${1:-5_kunitigs_}

#----------------------------#
# merge anchors
#----------------------------#
mkdir -p 6_mergeAnchors
anchr contained \
    $(
        parallel -k --no-run-if-empty -j 6 "
            if [ -e \${DIR_PREFIX}Q{1}L{2}X{3}P{4}/anchor/anchor.fasta ]; then
                echo \${DIR_PREFIX}Q{1}L{2}X{3}P{4}/anchor/anchor.fasta
            fi
            " ::: [% opt.qual2 %] ::: [% opt.len2 %] ::: [% opt.coverage2 %] ::: $(printf "%03d " {0..50})
    ) \
    --len 1000 --idt 0.98 --proportion 0.99999 --parallel [% opt.parallel %] \
    -o stdout \
    | faops filter -a 1000 -l 0 stdin 6_mergeAnchors/anchor.non-contained.fasta
anchr orient \
    6_mergeAnchors/anchor.non-contained.fasta \
    --len 1000 --idt 0.98 --parallel [% opt.parallel %] \
    -o 6_mergeAnchors/anchor.orient.fasta
anchr merge \
    6_mergeAnchors/anchor.orient.fasta \
    --len 1000 --idt 0.999 --parallel [% opt.parallel %] \
    -o 6_mergeAnchors/anchor.merge0.fasta
anchr contained \
    6_mergeAnchors/anchor.merge0.fasta \
    --len 1000 --idt 0.98 --proportion 0.99 --parallel [% opt.parallel %] \
    -o stdout \
    | faops filter -a 1000 -l 0 stdin 6_mergeAnchors/anchor.merge.fasta

#----------------------------#
# merge others
#----------------------------#
anchr contained \
    $(
        parallel -k --no-run-if-empty -j 6 "
            if [ -e \${DIR_PREFIX}Q{1}L{2}X{3}P{4}/anchor/pe.others.fa ]; then
                echo \${DIR_PREFIX}Q{1}L{2}X{3}P{4}/anchor/pe.others.fa
            fi
            " ::: [% opt.qual2 %] ::: [% opt.len2 %] ::: [% opt.coverage2 %] ::: $(printf "%03d " {0..50})
    ) \
    --len 500 --idt 0.98 --proportion 0.99999 --parallel [% opt.parallel %] \
    -o stdout \
    | faops filter -a 500 -l 0 stdin merge/others.non-contained.fasta
