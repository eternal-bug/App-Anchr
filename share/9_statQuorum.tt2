[% INCLUDE header.tt2 %]
log_warn 9_statQuorum.sh

echo -e "Table: statQuorum\n" > statQuorum.md
printf "| %s | %s | %s | %s | %s | %s | %s | %s | %s | %s |\n" \
    "Name" \
    "CovIn" "CovOut" "Discard%" \
    "AvgRead" "Kmer" \
    "RealG" "EstG" "Est/Real" \
    "RunTime" \
    >> statQuorum.md
printf "|:--|--:|--:|--:|--:|--:|--:|--:|--:|--:|\n" \
    >> statQuorum.md

for Q in 0 [% opt.qual2 %]; do
    for L in 0 [% opt.len2 %]; do
        if [ ! -d 2_illumina/Q${Q}L${L} ]; then
            continue;
        fi

        pushd 2_illumina/Q${Q}L${L} > /dev/null

        SUM_IN=$( cat environment.json | jq '.SUM_IN | tonumber' )
        SUM_OUT=$( cat environment.json | jq '.SUM_OUT | tonumber' )
        EST_G=$( cat environment.json | jq '.ESTIMATED_GENOME_SIZE | tonumber' )
        SECS=$( cat environment.json | jq '.RUNTIME | tonumber' )

        printf "| %s | %s | %s | %s | %s | %s | %s | %s | %s | %s |\n" \
            "Q${Q}L${L}" \
            $( perl -e "printf qq{%.1f}, ${SUM_IN} / [% opt.genome %];" ) \
            $( perl -e "printf qq{%.1f}, ${SUM_OUT} / [% opt.genome %];" ) \
            $( perl -e "printf qq{%.2f%%}, (1 - ${SUM_OUT} / ${SUM_IN}) * 100;" ) \
            $( cat environment.json | jq '.PE_AVG_READ_LENGTH | tonumber' ) \
            $( cat environment.json | jq '.KMER' ) \
            $( perl -MNumber::Format -e "print Number::Format::format_bytes([% opt.genome %], base => 1000,);" ) \
            $( perl -MNumber::Format -e "print Number::Format::format_bytes(${EST_G}, base => 1000,);" ) \
            $( perl -e "printf qq{%.2f}, ${EST_G} / [% opt.genome %]" ) \
            $( printf "%d:%02d'%02d''\n" $((${SECS}/3600)) $((${SECS}%3600/60)) $((${SECS}%60)) )

        popd > /dev/null
    done
done \
>> statQuorum.md
echo >> statQuorum.md

cat statQuorum.md
